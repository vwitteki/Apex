
public class InventoryTest {

	/*
	 * This is an example use case of the Inventory API.
	 * Not used here is the public method getSortedList, which is instead called downstream of printSortedList,
	 * but getSortedList can also be called directly.
	 * 
	 * Product name, Product category, and Expiration date are collected from the input files.
	 * Product number is unique and generated by the API.
	 */
	public static void main(String[] args) throws Exception {
		
		/* Create a section delimiter to improve readability */
		final String sectionBreak = "=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\n";
		
		/* Initialize inventory */
		Inventory inventory = new Inventory();
		
		/*
		 * Add the first data set,
		 * then return products sorted by name
		 */
		inventory.AddDataFromSrc("../ProductData1.txt");
		inventory.printSortedList(Inventory.ProductCompare.ByName);
		System.out.println(sectionBreak);
		
		/*
		 * Add the second data set,
		 * then return products sorted by category
		 */
		inventory.AddDataFromSrc("../ProductData2.txt");
		inventory.printSortedList(Inventory.ProductCompare.ByCategory);
		System.out.println(sectionBreak);
		
		/*
		 * Add the third data set,
		 * then return products sorted by expiration date
		 */
		inventory.AddDataFromSrc("../ProductData3.txt");
		inventory.printSortedList(Inventory.ProductCompare.ByExpDate);
		System.out.println(sectionBreak);
		
		/*
		 * Delete all products that are in the "Produce" category,
		 * then return products sorted by number
		 */
		inventory.DeleteProducts(Inventory.ProductCompare.ByCategory, "Produce");
		inventory.printSortedList(Inventory.ProductCompare.ByNumber);
	}
}
